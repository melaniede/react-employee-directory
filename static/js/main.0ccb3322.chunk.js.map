{"version":3,"sources":["logo.svg","components/Header/index.js","components/Search/index.js","utils/API.js","components/Table/index.js","components/EmployeeRow/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","SearchForm","type","placeholder","aria-label","axios","get","Table","EmployeeRow","props","scope","src","image","name","email","phone","App","useState","results","setResult","useEffect","API","then","res","data","catch","err","console","log","Search","map","employee","picture","thumbnail","first","last","id","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAAe,I,YCYAA,MATf,WACI,OACI,qBAAKC,MAAM,2CAAX,SAEI,uDCQGC,MAbf,WACI,OACA,uBAAMD,MAAM,cAAZ,UACI,uBACAA,MAAM,uBACNE,KAAK,SACLC,YAAY,SACZC,aAAW,WACX,wBAAQJ,MAAM,uCAAuCE,KAAK,SAA1D,wB,iBCRM,EACI,WAEV,OAAOG,IAAMC,IAAI,kDCYVC,MAff,WACI,OACE,uBAAOP,MAAM,QAAb,SACE,gCACI,+BACI,0CACA,sCACA,uCACA,+CCODQ,MAff,SAAsBC,GAClB,OACI,uBAAOT,MAAM,QAAb,SACI,gCACI,+BACI,oBAAIU,MAAM,MAAV,SAAgB,qBAAKC,IAAKF,EAAMG,UAChC,6BAAKH,EAAMI,OACX,6BAAKJ,EAAMK,QACX,6BAAKL,EAAMM,gBCgChBC,MAhCf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAEPC,EAFO,KAEEC,EAFF,KAWb,OAPDC,qBAAU,WACTC,IACGC,MAAK,SAAAC,GAAG,OAAIJ,EAAWI,EAAIC,KAAKN,YAChCO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACvB,IACHC,QAAQC,IAAIV,GAIV,cADF,CACE,iBACE,cAAC,EAAD,IACA,cAACW,EAAD,IACA,cAAC,EAAD,IACCX,EAAQY,KAAI,SAAAC,GAAQ,OACrB,cAAC,EAAD,CAEEnB,MAAOmB,EAASC,QAAQC,UACxBpB,KAAMkB,EAASlB,KAAKqB,MAAQ,IAAMH,EAASlB,KAAKsB,KAChDrB,MAAOiB,EAASjB,MAChBC,MAAOgB,EAAShB,OAJXgB,EAASK,GAAGC,UANrB,QCXSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ccb3322.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header () {\n    return (\n        <div class=\"navbar navbar-light bg-light text-center\">\n        {/* <div class=\"App-header\"> */}\n            <h1>Employee Directory</h1>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction SearchForm () {\n    return (\n    <form class=\"form-inline\">\n        <input \n        class=\"form-control mr-sm-2\" \n        type=\"search\" \n        placeholder=\"Search\" \n        aria-label=\"Search\"/>\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n    );\n}\n\nexport default SearchForm;\n\n\n// import React from \"react\";\n// import \"./style.css\";\n\n// // Using the datalist element we can create autofill suggestions based on the props.breeds array\n// function SearchForm(props) {\n//   return (\n//     <form className=\"search\">\n//       <div className=\"form-group\">\n//         <label htmlFor=\"breed\">Breed Name:</label>\n//         <input\n//         //   value={props.search}\n//         //   onChange={props.handleInputChange}\n//           name=\"breed\"\n//           list=\"breeds\"\n//           type=\"text\"\n//           className=\"form-control\"\n//           placeholder=\"Type in a dog breed to begin\"\n//           id=\"breed\"\n//         />\n//         {/* <datalist id=\"breeds\">\n//           {props.breeds.map(breed => (\n//             <option value={breed} key={breed} />\n//           ))}\n//         </datalist> */}\n//         <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n//           Search\n//         </button>\n//       </div>\n//     </form>\n//   );\n// }\n\n// export default SearchForm;","import axios from \"axios\";\n\nexport default{ \n    getEmployees: function(){    \n\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};\n\n","import React from \"react\";\n\nfunction Table () {\n    return (\n      <table class=\"table\">\n        <tbody>\n            <tr>\n                <th>Employee</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n            </tr>\n        </tbody>\n      </table>\n    );\n}\n\nexport default Table;\n","import React from \"react\";\n\nfunction EmployeeRow (props) {\n    return (\n        <table class=\"table\">\n            <tbody>\n                <tr>\n                    <th scope=\"row\"><img src={props.image}/></th>\n                    <td>{props.name}</td>\n                    <td>{props.email}</td>\n                    <td>{props.phone}</td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n\nexport default EmployeeRow;\n\n<table class=\"table\">\n<thead>\n    <tr>\n        <th scope=\"col\">Employee</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Phone</th>\n    </tr>\n</thead>\n</table>","import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport SearchForm from \"./components/Search\";\nimport API from \"./utils/API.js\"\nimport Table from \"./components/Table\";\nimport EmployeeRow from \"./components/EmployeeRow\";\n\n\nfunction App() {\n\n const [results, setResult] = useState([]);\n\n useEffect(() => {\n  API.getEmployees()\n    .then(res => setResult( res.data.results ))\n    .catch(err => console.log(err));\n    }, []); \n    console.log(results);\n\n  return (\n    // <Router>\n      <div>\n        <Header />\n        <SearchForm />\n        <Table />\n        {results.map(employee => (\n        <EmployeeRow\n          key={employee.id.value}\n          image={employee.picture.thumbnail}\n          name={employee.name.first + \" \" + employee.name.last}\n          email={employee.email}\n          phone={employee.phone}\n        />\n      ))};\n      </div>\n    // </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}